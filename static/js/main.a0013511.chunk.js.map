{"version":3,"sources":["components/spinner.js","components/searchBox.js","components/genres.js","components/navbar.js","components/footer.js","components/MovieOverview.js","components/MovieItem.js","components/MoviesGrid.js","components/main.js","App.js","index.js"],"names":["MySpinner","props","Spinner","animation","role","className","variant","hidden","show","SearchBox","useState","setShow","Form","inline","onSubmit","e","preventDefault","element","target","children","url","constructUrl","query","fetch","then","response","json","handleMovies","results","value","FormControl","type","placeholder","onChange","event","handleQuery","setInterval","Button","GenreSelector","popularMovies","setPopularMovies","isLoaded","handleGenresList","setIsLoaded","atob","genres","fetchPopularMovies","genresList","Nav","Group","controlId","Control","as","selectedGenre","Number","filteredMovies","filter","movie","genre_ids","includes","map","genre","key","id","name","MyNavbar","Navbar","bg","expand","Brand","href","size","style","fontSize","Toggle","aria-controls","Collapse","Myfooter","footer","Container","Row","Col","link","backgroundColor","textAlign","position","left","bottom","width","color","textDecoration","MovieOverview","handleClose","overview","title","imgUrl","Modal","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","Card","Img","src","padding","Text","Footer","onClick","MovieItem","poster_path","border","movieGenreIds","genreId","index","theGenre","find","item","Badge","vote_average","date","dateString","Date","toDateString","slice","formatDate","release_date","MoviesGrid","listStyle","moviesList","Main","path","App","setMoviesList","setQuery","setGenresList","movies","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0013511.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function MySpinner(props) {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      className=\"m-2\"\r\n      variant=\"info\"\r\n      hidden={props.show}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport MySpinner from \"./spinner\";\r\n\r\nexport default function SearchBox(props) {\r\n  const [show, setShow] = useState(true);\r\n  const onSearch = event => {\r\n    props.handleQuery(event.target.value);\r\n    setShow(false);\r\n    setInterval(() => {\r\n      setShow(true);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MySpinner show={show} />\r\n      <Form\r\n        inline\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          let element = e.target.children[0];\r\n          let url = props.constructUrl(\"search/movie\", props.query);\r\n\r\n          fetch(url)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n              props.handleMovies(json.results);\r\n              element.value = \"\";\r\n            });\r\n        }}\r\n      >\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"mr-s w-auto\"\r\n          value={props.query}\r\n          onChange={onSearch}\r\n        />\r\n        <Button type=\"submit\" variant=\"outline-primary\" className=\"m-1\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import { Form, Nav } from \"react-bootstrap\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport default function GenreSelector(props) {\r\n  const [popularMovies, setPopularMovies] = useState([]);\r\n  fetchMovieGenres(props.isLoaded, props.handleGenresList, props.setIsLoaded);\r\n  fetchPopularMovies(props.isLoaded, props.handleMovies, setPopularMovies);\r\n  let genresList = [...props.genresList];\r\n  return (\r\n    <Nav className=\"mr-auto mb-0\">\r\n      <Form.Group className=\"mb-0\" controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Control\r\n          as=\"select\"\r\n          onChange={e => {\r\n            let selectedGenre = Number(e.target.value);\r\n            const filteredMovies = popularMovies.filter(movie =>\r\n              movie.genre_ids.includes(selectedGenre)\r\n            );\r\n            props.handleMovies(filteredMovies);\r\n          }}\r\n        >\r\n          {genresList.map(genre => {\r\n            return (\r\n              <option key={genre.id} value={genre.id}>\r\n                {genre.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nfunction fetchMovieGenres(isLoaded, handleGenresList, setIsLoaded) {\r\n  if (!isLoaded) {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${atob(\r\n        \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n      )}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(json => handleGenresList(json.genres));\r\n    setIsLoaded(true);\r\n  }\r\n}\r\n\r\nfunction fetchPopularMovies(isLoaded, handleMovies, setPopularMovies) {\r\n  if (!isLoaded) {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${atob(\r\n        \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n      )}&language=en-US&page=100`\r\n    )\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        handleMovies(json.results);\r\n        setPopularMovies(json.results);\r\n      });\r\n  } else {\r\n    return;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { MdMovieFilter } from \"react-icons/md\";\r\nimport SearchBox from \"./searchBox\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport GenreSelector from \"./genres\";\r\n\r\nexport default function MyNavbar(props) {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\" className=\"text-warning \">\r\n          <MdMovieFilter size=\"2.5rem\" className='text-primary' />\r\n          <span className=\"text-info display-3 text-dark\" style={{ fontSize: '1.7rem' }}> movies</span>\r\n        </Navbar.Brand>\r\n        <GenreSelector\r\n          handleMovies={props.handleMovies}\r\n          handleGenresList={props.handleGenresList}\r\n          isLoaded={props.isLoaded}\r\n          setIsLoaded={props.setIsLoaded}\r\n          genresList={props.genresList}\r\n        />\r\n        <Navbar.Toggle\r\n          aria-controls=\"basic-navbar-nav\"\r\n          className=\"bg-light\"\r\n        />\r\n        <Navbar.Collapse\r\n          id=\"basic-navbar-nav\"\r\n          className=\"my-2 row\r\n           justify-content-end\"\r\n        >\r\n          <SearchBox\r\n            handleMovies={props.handleMovies}\r\n            handleQuery={props.handleQuery}\r\n            constructUrl={props.constructUrl}\r\n            query={props.query}\r\n          />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Myfooter() {\r\n  return (\r\n    <div className=\"p-4 main-footer\" style={footer}>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-dark\">\r\n            Made By our team :\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Hewr-Srood\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Hewr\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/neven2\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Neven\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Arvinalhissou\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Arvin\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/vazhin\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Vazhin\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Zainab98Azzam\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Zainab\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst footer = {\r\n  backgroundColor: 'rgb(240,240,240)',\r\n  fontSize: \"0.8rem\",\r\n  textAlign: \"center\",\r\n  position: \"fixed\",\r\n  left: \"0\",\r\n  bottom: \"0\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst link = {\r\n  color: \"#34495E \",\r\n  textDecoration: \"none\"\r\n};\r\n","import React from 'react'\r\nimport { Button, Modal, Card } from 'react-bootstrap'\r\nimport \"../App.css\";\r\n\r\nexport default function MovieOverview({ show, handleClose, overview, title, imgUrl }) {\r\n  return (\r\n    <Modal show={show} onHide={handleClose} size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      className='movie-overview-modal scale-up-center'\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className='d-flex justify-content-center align-items-center movie-overview-modal-body'>\r\n        <Card.Img variant=\"top\" src={imgUrl} className='p-3 movie-overview-img' style={{ width: '200px' }} />\r\n        <div className='movie-overview-text' style={{ padding: '3rem' }}>\r\n          <Card.Text className='mb-4 text-primary' style={{ fontSize: '1.8rem' }}>Overview</Card.Text>\r\n          <Card.Text>{overview}</Card.Text>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Close\r\n          </Button>\r\n        <Button variant=\"primary\">\r\n          Watch Movie\r\n          </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Card, Button, Badge } from \"react-bootstrap\";\r\nimport MovieOverview from './MovieOverview'\r\nlet imageBaseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nexport default function MovieItem(props) {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true)\r\n  let imgUrl = imageBaseUrl + props.movie.poster_path\r\n  \r\n  return (\r\n    <li className='m-5 tilt-in-top-1'>\r\n      <Card\r\n        style={{ width: \"18rem\", border: 'none' }}\r\n        className=\"align-items-center justify-content-center shadow-sm\"\r\n      >\r\n        <Card.Img variant=\"top\" src={imgUrl} />\r\n        <Card.Body className='w-100'>\r\n          <Card.Title style={{ fontSize: '1.6rem' }}>{props.movie.title}</Card.Title>\r\n          <Card.Text>{findGenresToRender(props.movie.genre_ids, props.genresList)}</Card.Text>\r\n          <Card.Text>\r\n            <Badge variant=\"warning\" style={{ fontSize: '0.85rem' }} className=\"mr-2\">Rating {props.movie.vote_average}</Badge>\r\n            <Badge variant=\"primary\" style={{ fontSize: '0.85rem' }}>{formatDate(props.movie.release_date)}</Badge>\r\n          </Card.Text>\r\n          <Button variant=\"light\" className='bg-white' onClick={handleShow} style={{ border: '1px solid rgba(0,0,0,.125)' }}>Learn more</Button>\r\n          <MovieOverview handleClose={handleClose} show={show} overview={props.movie.overview} title={props.movie.title} imgUrl={imgUrl} />\r\n        </Card.Body>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction findGenresToRender(movieGenreIds, genresList) {\r\n  return movieGenreIds.map((genreId, index) => {\r\n    let theGenre = genresList.find(item => item.id === genreId);\r\n    if (theGenre) {\r\n      return (\r\n        <Badge className=\"mr-1\" variant=\"light\" key={`${genreId}`} style={{ fontSize: '0.85rem' }}>\r\n          {theGenre.name}\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return <span key={`${index}`} />;\r\n    }\r\n  });\r\n}\r\n\r\nfunction formatDate(date) {\r\n  let dateObj = new Date(date);\r\n  let dateString = dateObj.toDateString();\r\n  return dateString.slice(4, 10) + \", \" + dateString.slice(11);\r\n}\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nexport default function MoviesGrid(props) {\r\n  return (\r\n    <>\r\n      <ul\r\n        style={{ listStyle: \"none\", padding: '0' }}\r\n        className=\"d-flex align-items-center justify-content-center flex-wrap\"\r\n      >\r\n        {props.moviesList &&\r\n          props.moviesList.map((movie, index) => (\r\n            <MovieItem\r\n              key={`${index}`}\r\n              movie={movie}\r\n              isLoaded={props.isLoaded}\r\n              setIsLoaded={props.setIsLoaded}\r\n              genresList={props.genresList}\r\n            />\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MoviesGrid from \"./MoviesGrid\";\r\n\r\nexport default function Main(props) {\r\n  return (\r\n    <MoviesGrid\r\n      moviesList={props.moviesList}\r\n      setIsLoaded={props.setIsLoaded}\r\n      isLoaded={props.isLoaded}\r\n      genresList={props.genresList}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport MyNavbar from \"./components/navbar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Myfooter from \"./components/footer\";\r\nimport Main from \"./components/main\";\r\nlet TMDB_BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst constructUrl = (path, query) => {\r\n  return `${TMDB_BASE_URL}/${path}?api_key=${atob(\r\n    \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n  )}&query=${query}`;\r\n};\r\n\r\nfunction App() {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [genresList, setGenresList] = useState([]);\r\n\r\n  function handleMovies(movies) {\r\n    setMoviesList(movies);\r\n  }\r\n\r\n  function handleGenresList(genres) {\r\n    setGenresList(genres);\r\n  }\r\n\r\n  function handleQuery(query) {\r\n    setQuery(query);\r\n  }\r\n  return (\r\n    <>\r\n      <MyNavbar\r\n        setMoviesList={setMoviesList}\r\n        handleMovies={handleMovies}\r\n        handleGenresList={handleGenresList}\r\n        constructUrl={constructUrl}\r\n        isLoaded={isLoaded}\r\n        setIsLoaded={setIsLoaded}\r\n        genresList={genresList}\r\n        setGenresList={setGenresList}\r\n        handleQuery={handleQuery}\r\n        query={query}\r\n      />\r\n      <Main\r\n        moviesList={moviesList}\r\n        isLoaded={isLoaded}\r\n        setIsLoaded={setIsLoaded}\r\n        genresList={genresList}\r\n        query={query}\r\n      />\r\n      <Myfooter />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}