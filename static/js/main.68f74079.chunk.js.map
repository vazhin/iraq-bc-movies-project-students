{"version":3,"sources":["components/Navbar/searchBox.js","components/API.js","StateProvider.js","components/Navbar/genres.js","components/Navbar/navbar.js","components/util.js","components/Main/MovieItem.js","components/Main/MoviesGrid.js","components/Main/footer.js","components/Main/main.js","components/MoviePage/trailer.js","components/MoviePage/cast.js","components/MoviePage/image.js","components/MoviePage/movieGenre.js","components/MoviePage/MovieInfo.js","components/MoviePage/MoviePage.js","components/ActorPage/ActorPage.js","components/Navbar/searchResult.js","App.js","index.js"],"names":["SearchBox","textInput","React","useRef","history","useHistory","Form","inline","onSubmit","e","preventDefault","query","target","children","value","push","current","FormControl","type","placeholder","className","ref","Button","variant","fetchQuery","url","path","atob","constructUrl","fetch","then","response","json","MovieContext","createContext","MovieProvider","props","useReducer","state","action","moviesList","genresList","Error","dispatch","useEffect","data","genres","Provider","GenreSelector","useState","popularMovies","setPopularMovies","useContext","results","Nav","Group","controlId","Control","as","onChange","selectedGenre","Number","filteredMovies","filter","movie","genre_ids","includes","key","map","genre","id","name","MyNavbar","Navbar","expand","style","boxShadow","Brand","href","to","textDecoration","size","fontSize","Toggle","aria-controls","Collapse","formatDate","date","dateString","Date","toDateString","slice","MovieItem","imgUrl","poster_path","div","whileHover","scale","whileTap","Card","width","border","Img","src","onError","Body","Title","color","title","Text","movieGenreIds","genreId","index","theGenre","find","item","Badge","backgroundColor","vote_average","release_date","MoviesGrid","listStyle","padding","Myfooter","footer","Container","Row","Col","link","textAlign","Main","length","MovieTrailer","movieId","videos","setVideos","frameBorder","allow","allowFullScreen","MovieCast","cast","setCast","Carousel","actor","Item","cast_id","minHeight","maxHeight","alt","opacity","Caption","height","borderRadius","profile_path","character","MovieImage","currentMovie","fluid","MovieGenre","obj","changeColorClass","colorIndex","arrOfColorClasses","MovieInfo","lg","justifyContent","overview","MoviePage","setCurrentMovie","useParams","ActorPage","currentActor","setCurrentActor","castId","fetchActor","Jumbotron","birthday","place_of_birth","known_for_department","biography","onClick","goBack","SearchResult","search","useLocation","URLSearchParams","get","App","exact","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68f74079.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SearchBox() {\r\n  const textInput = React.useRef();\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Form\r\n        inline\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          let query = e.target.children[0].value;\r\n          history.push(`/iraq-bc-movies-project-students/search?query=${query}`);\r\n          textInput.current.value = \"\";\r\n        }}\r\n      >\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"mr-s w-auto\"\r\n          ref={textInput}\r\n        />\r\n        <Button type=\"submit\" variant=\"outline-primary\" className=\"m-1\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","export function fetchGenres() {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${atob(\r\n      \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n    )}`\r\n  ).then(response => response.json());\r\n}\r\n\r\nlet TMDB_BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst constructUrl = (path, query) => {\r\n  return `${TMDB_BASE_URL}/${path}?api_key=${atob(\r\n    \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n  )}&query=${query}`;\r\n};\r\n\r\nexport function fetchQuery(query) {\r\n  let url = constructUrl(\"search/movie\", query);\r\n  return fetch(url).then(response => response.json());\r\n}\r\n\r\nexport function fetchPopularMovies() {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${atob(\r\n      \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n    )}&language=en-US&page=100`\r\n  ).then(response => response.json());\r\n}\r\n\r\nexport function fetchActor(castId) {\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/person/${castId}?api_key=${atob(\r\n      \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n    )}&language=en-US`\r\n  ).then(response => response.json());\r\n}\r\n","import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport { fetchGenres } from \"./components/API\";\r\n\r\nexport const MovieContext = createContext();\r\n\r\nexport const MovieProvider = props => {\r\n  const initialState = {\r\n    moviesList: [],\r\n    genresList: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    fetchGenres().then(data => {\r\n      dispatch({ type: \"SET_GENRES\", genresList: data.genres });\r\n    });\r\n  }, []);\r\n\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"SET_MOVIES\":\r\n        return { ...state, moviesList: [...action.moviesList] };\r\n      case \"SET_GENRES\":\r\n        return { ...state, genresList: [...action.genresList] };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MovieContext.Provider value={[state, dispatch]}>\r\n        {props.children}\r\n      </MovieContext.Provider>\r\n    </>\r\n  );\r\n};\r\n","import { Form, Nav } from \"react-bootstrap\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { MovieContext } from \"../../StateProvider\";\r\nimport { fetchPopularMovies } from \"../API\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function GenreSelector() {\r\n  const [popularMovies, setPopularMovies] = useState([]);\r\n  const [state, dispatch] = useContext(MovieContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchPopularMovies().then(data => {\r\n      dispatch({ type: \"SET_MOVIES\", moviesList: data.results });\r\n      setPopularMovies(data.results);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Nav className=\"mr-auto mb-0\">\r\n      <Form.Group className=\"mb-0\" controlId=\"exampleForm.ControlSelect1\">\r\n        <Form.Control\r\n          as=\"select\"\r\n          onChange={e => {\r\n            history.push(\"/iraq-bc-movies-project-students/\");\r\n            let selectedGenre = Number(e.target.value);\r\n            if (selectedGenre !== 0) {\r\n              const filteredMovies = popularMovies.filter(movie =>\r\n                movie.genre_ids.includes(selectedGenre)\r\n              );\r\n              dispatch({ type: \"SET_MOVIES\", moviesList: filteredMovies });\r\n            } else {\r\n              dispatch({ type: \"SET_MOVIES\", moviesList: popularMovies });\r\n            }\r\n          }}\r\n        >\r\n          <option key={0} value={0}>\r\n            All genres\r\n          </option>\r\n          {state.genresList &&\r\n            state.genresList.map(genre => {\r\n              return (\r\n                <option key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </option>\r\n              );\r\n            })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </Nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { MdMovieFilter } from \"react-icons/md\";\r\nimport SearchBox from \"./searchBox\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport GenreSelector from \"./genres\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function MyNavbar() {\r\n  return (\r\n    <>\r\n      <Navbar\r\n        expand=\"lg\"\r\n        style={{ boxShadow: \"0px 3px 3px -1px rgba(240,240,240,1)\" }}\r\n      >\r\n        <Navbar.Brand href=\"#home\">\r\n          <Link to=\"/iraq-bc-movies-project-students/\" style={{ textDecoration: \"none\" }}>\r\n            <div className=\"m-2 mr-3\">\r\n              <MdMovieFilter size=\"2.5rem\" className=\"text-primary mb-1\" />\r\n              <span\r\n                className=\"text-info display-3 text-dark\"\r\n                style={{ fontSize: \"1.7rem\" }}\r\n              >\r\n                {\" \"}\r\n                Cinemagic\r\n              </span>\r\n            </div>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <GenreSelector />\r\n          </Nav>\r\n          <SearchBox />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nexport function formatDate(date) {\r\n  let dateObj = new Date(date);\r\n  let dateString = dateObj.toDateString();\r\n  return dateString.slice(4, 10) + \", \" + dateString.slice(11);\r\n}\r\n\r\nexport function findGenresToRender(movieGenreIds, genresList) {\r\n  return movieGenreIds.map((genreId, index) => {\r\n    let theGenre = genresList.find(item => item.id === genreId);\r\n    if (theGenre) {\r\n      return (\r\n        <Badge\r\n          className=\"mr-1 text-dark\"\r\n          key={`${genreId}`}\r\n          style={{ fontSize: \"0.85rem\", backgroundColor: \"#e9ecef\" }}\r\n        >\r\n          {theGenre.name}\r\n        </Badge>\r\n      );\r\n    } else {\r\n      return <span key={`${index}`} />;\r\n    }\r\n  });\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatDate } from \"../util\";\r\nimport { MovieContext } from \"../../StateProvider\";\r\nimport { findGenresToRender } from \"../util\";\r\nlet imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nexport default function MovieItem({ movie }) {\r\n  let imgUrl = imageBaseUrl + movie.poster_path;\r\n  const [state] = useContext(MovieContext);\r\n  return (\r\n    <li className=\"m-5 tilt-in-top-1\">\r\n      <Link to={`/iraq-bc-movies-project-students/movie/${movie.id}`} style={{ textDecoration: \"none\" }}>\r\n        <motion.div whileHover={{ scale: 1.08 }} whileTap={{ scale: 0.9 }}>\r\n          <Card\r\n            style={{ width: \"17rem\", border: \"none\" }}\r\n            className=\"align-items-center justify-content-center shadow-sm movie-item\"\r\n          >\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={imgUrl}\r\n              onError={e => {\r\n                e.target.src =\r\n                  \"https://www.pinclipart.com/picdir/big/134-1340367_movie-icons-free-download-software-icon-png-blue.png\";\r\n              }}\r\n            />\r\n            <Card.Body className=\"w-100\">\r\n              <Card.Title style={{ fontSize: \"1.6rem\", color: \"black\" }}>\r\n                {movie.title}\r\n              </Card.Title>\r\n              <Card.Text>\r\n                {findGenresToRender(movie.genre_ids, state.genresList)}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                <Badge\r\n                  variant=\"warning\"\r\n                  style={{ fontSize: \"0.85rem\" }}\r\n                  className=\"mr-2\"\r\n                >\r\n                  Rating {movie.vote_average}\r\n                </Badge>\r\n                <Badge variant=\"primary\" style={{ fontSize: \"0.85rem\" }}>\r\n                  {formatDate(movie.release_date)}\r\n                </Badge>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </motion.div>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nexport default function MoviesGrid({ moviesList }) {\r\n  return (\r\n    <ul\r\n      style={{ listStyle: \"none\", padding: \"0\" }}\r\n      className=\"d-flex align-items-center justify-content-center flex-wrap\"\r\n    >\r\n      {moviesList &&\r\n        moviesList.map((movie, index) => (\r\n          <MovieItem key={`${index}`} movie={movie} />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FaGithub, FaHeart } from \"react-icons/fa\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Myfooter() {\r\n  return (\r\n    <div className=\"py-3\" style={footer}>\r\n      <Container>\r\n        <Row className=\"mb-3\">\r\n          <Col className=\"text-dark\">\r\n            Made with <FaHeart /> by :\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"text-dark\">\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Hewr-Srood\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Hewr\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/neven2\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Neven\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Arvinalhissou\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Arvin\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/vazhin\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Vazhin\r\n            </a>\r\n            <a\r\n              className=\"m-2 text-dark\"\r\n              href=\"https://github.com/Zainab98Azzam\"\r\n              style={link}\r\n            >\r\n              <FaGithub /> Zainab\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst footer = {\r\n  backgroundColor: \"#F0F0F0\",\r\n  fontSize: \"0.82rem\",\r\n  textAlign: \"center\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst link = {\r\n  color: \"#34495E \",\r\n  textDecoration: \"none\"\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport MoviesGrid from \"./MoviesGrid\";\r\nimport Myfooter from \"./footer\";\r\nimport { MovieContext } from \"../../StateProvider\";\r\n\r\nexport default function Main() {\r\n  const [state] = useContext(MovieContext);\r\n  return (\r\n    <>\r\n      <MoviesGrid moviesList={state.moviesList} />\r\n      {state.moviesList.length !== 0 && <Myfooter />}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./movie.css\";\r\nexport default function MovieTrailer({ movieId }) {\r\n  const [videos, setVideos] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${atob(\r\n        \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n      )}&language=en-US`\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setVideos(data.results[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {videos && (\r\n        <>\r\n          <h3\r\n            className=\"text-center display-3 my-4\"\r\n            style={{ fontSize: \"3rem\" }}\r\n          >\r\n            Trailer\r\n          </h3>\r\n          <div className=\"w-100 videoWrapper\">\r\n            <iframe\r\n              className=\"embed-responsive-item\"\r\n              title={`${videos.id}`}\r\n              src={`https://www.youtube.com/embed/${videos.key}`}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../../App.css\";\r\n\r\nexport default function MovieCast({ movieId }) {\r\n  const [cast, setCast] = useState();\r\n  let imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${atob(\r\n        \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n      )}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setCast(data.cast);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Carousel>\r\n      {cast &&\r\n        cast.map(actor => (\r\n          <Carousel.Item\r\n            key={actor.cast_id}\r\n            style={{\r\n              minHeight: \"370px\",\r\n              maxHeight: \"600px\"\r\n            }}\r\n          >\r\n            <Link to={`/iraq-bc-movies-project-students/people/${actor.id}`}>\r\n              <img\r\n                className=\"d-block w-100 \"\r\n                alt=\"cast\"\r\n                style={{ opacity: 0 }}\r\n                src=\"https://mcdn.wallpapersafari.com/medium/50/19/l7d5Aq.png\"\r\n              />\r\n              <Carousel.Caption className=\"text-dark\">\r\n                <img\r\n                  className=\"d-block mx-auto img-fluid\"\r\n                  alt=\"cast\"\r\n                  style={{\r\n                    width: \"110px\",\r\n                    height: \"auto\",\r\n                    borderRadius: \"15px\"\r\n                  }}\r\n                  src={`${imageBaseUrl + actor.profile_path}`}\r\n                  onError={e => {\r\n                    e.target.src =\r\n                      \"https://www.pinclipart.com/picdir/big/195-1955082_theatre-mask-icon-clipart.png\";\r\n                  }}\r\n                />\r\n                <h3 className=\"mt-2 display-3\" style={{ fontSize: \"1.5rem\" }}>\r\n                  {actor.name}\r\n                </h3>\r\n                <h6>{actor.character}</h6>\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./movie.css\";\r\n\r\nexport default function MovieImage({ currentMovie }) {\r\n  const imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n  const imgUrl = imageBaseUrl + currentMovie.poster_path;\r\n\r\n  return (\r\n    <div fluid=\"md\" className=\"movie-page-style w-100\">\r\n      <img\r\n        src={imgUrl}\r\n        alt=\"movie\"\r\n        className=\"mx-auto\"\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          width: \"80%\",\r\n          height: \"auto\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nexport default function MovieGenre({ currentMovie }) {\r\n  return (\r\n    <div>\r\n      {currentMovie.genres &&\r\n        currentMovie.genres.map(obj => (\r\n          <Badge\r\n            className=\"ml-2\"\r\n            variant={changeColorClass()}\r\n            key={`${obj.id}`}\r\n            style={{ fontSize: \"0.85rem\" }}\r\n          >\r\n            {obj.name}\r\n          </Badge>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nlet colorIndex = -1;\r\n\r\nfunction changeColorClass() {\r\n  colorIndex++;\r\n  let arrOfColorClasses = [\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"dark\",\r\n    \"info\",\r\n    \"danger\",\r\n    \"success\"\r\n  ];\r\n  if (colorIndex < arrOfColorClasses.length) {\r\n    return arrOfColorClasses[colorIndex];\r\n  } else {\r\n    colorIndex = 0;\r\n    return arrOfColorClasses[colorIndex];\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Badge, Col, Row } from \"react-bootstrap\";\r\nimport MovieCast from \"./cast\";\r\nimport MovieImage from \"./image\";\r\nimport MovieGenre from \"./movieGenre\";\r\nimport { formatDate } from \"../util\";\r\nimport \"./movie.css\";\r\n\r\nexport default function MovieInfo({ currentMovie, movieId }) {\r\n  return (\r\n    <>\r\n      <Row className=\"w-100\">\r\n        <Col lg=\"4\" className=\"movie-page-style\">\r\n          <MovieImage currentMovie={currentMovie} />\r\n        </Col>\r\n\r\n        <Col\r\n          lg=\"4\"\r\n          className=\"movie-page-style\"\r\n          style={{ justifyContent: \"space-around\" }}\r\n        >\r\n          <h3\r\n            className=\"text-center display-3 my-3\"\r\n            style={{ fontSize: \"3rem\" }}\r\n          >\r\n            Overview:\r\n          </h3>\r\n          <p>{currentMovie.overview}</p>\r\n          <div>\r\n            <Badge variant=\"primary\" style={{ fontSize: \"0.85rem\" }}>\r\n              {formatDate(currentMovie.release_date)}\r\n            </Badge>\r\n            <Badge\r\n              variant=\"warning\"\r\n              className=\"ml-2\"\r\n              style={{ fontSize: \"0.85rem\" }}\r\n            >\r\n              Rating :{currentMovie.vote_average}\r\n            </Badge>\r\n          </div>\r\n          <MovieGenre currentMovie={currentMovie} />\r\n        </Col>\r\n\r\n        <Col\r\n          lg=\"4\"\r\n          className=\"movie-page-style mx-auto\"\r\n          style={{ width: \"450px\" }}\r\n        >\r\n          <h3\r\n            className=\"text-center display-3 m-0 mt-3\"\r\n            style={{ fontSize: \"3rem\" }}\r\n          >\r\n            Cast\r\n          </h3>\r\n          <MovieCast movieId={movieId} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport MovieTrailer from \"./trailer\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport \"./movie.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function MoviePage() {\r\n  const [currentMovie, setCurrentMovie] = useState(\"e\");\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch(`\r\n    https://api.themoviedb.org/3/movie/${movieId}?api_key=${atob(\r\n      \"ZDJmYTdhZDFlMjZhZjA4NDdkMzQ5ZDdkYmQ1ZjkzZTU=\"\r\n    )}&language=en-US`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setCurrentMovie(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-100 movie-page-style\">\r\n        <Container className=\"movie-page-style my-4 mx-0 p-0 w-100\">\r\n          <h1 className=\"text-center my-5\" style={{ fontSize: \"3rem\" }}>\r\n            {currentMovie.title}\r\n          </h1>\r\n          <Row className=\"w-100\">\r\n            <Col\r\n              lg=\"12\"\r\n              className=\"d-flex flex-column justify-content-center align-items-center p-0\"\r\n            >\r\n              <MovieInfo currentMovie={currentMovie} movieId={movieId} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Container className=\"movie-page-style my-5 mx-auto p-0\">\r\n          <Row className=\"w-100 h-100\">\r\n            <Col className=\"m-auto\">\r\n              <MovieTrailer movieId={movieId} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Button, Jumbotron, Container, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { formatDate } from \"../util\";\r\nimport { fetchActor } from \"../API\";\r\nimport \"./actor.css\";\r\n\r\nexport default function ActorPage() {\r\n  const [currentActor, setCurrentActor] = useState();\r\n  const history = useHistory();\r\n  const { castId } = useParams();\r\n  const imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  useEffect(() => {\r\n    fetchActor(castId).then(data => {\r\n      setCurrentActor(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {currentActor && (\r\n        <Container>\r\n          <Row>\r\n            {currentActor.profile_path && (\r\n              <Col lg=\"5\" className=\"actor-image-container\">\r\n                <img\r\n                  src={imageBaseUrl + currentActor.profile_path}\r\n                  alt=\"actor\"\r\n                  className=\"actor-image\"\r\n                />\r\n              </Col>\r\n            )}\r\n            <Col lg=\"7\" className=\"actor-info-container m-auto\">\r\n              <Jumbotron className=\"actor-info-container mx-auto my-3 py-5\">\r\n                <h1 className=\"display-3 mb-3 actor-name\">\r\n                  {currentActor.name}\r\n                </h1>\r\n                <div className=\"align-self-md-start\">\r\n                  {currentActor.birthday && (\r\n                    <p>\r\n                      Date of birth:{\" \"}\r\n                      <Badge className=\"actor-badge\" variant=\"light\">\r\n                        {formatDate(currentActor.birthday)}\r\n                      </Badge>\r\n                    </p>\r\n                  )}\r\n                  {currentActor.place_of_birth && (\r\n                    <p>\r\n                      Born in:{\" \"}\r\n                      <Badge className=\"actor-badge\" variant=\"light\">\r\n                        {currentActor.place_of_birth}\r\n                      </Badge>\r\n                    </p>\r\n                  )}\r\n                  {currentActor.known_for_department && (\r\n                    <p>\r\n                      Known for:{\" \"}\r\n                      <Badge className=\"actor-badge\" variant=\"light\">\r\n                        {currentActor.known_for_department}\r\n                      </Badge>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                {currentActor.biography && (\r\n                  <>\r\n                    <h3 className=\"mb-3\">Biography</h3>\r\n                    <p>{currentActor.biography}</p>\r\n                  </>\r\n                )}\r\n\r\n                <Button\r\n                  className=\"mt-3\"\r\n                  onClick={() => history.goBack()}\r\n                  variant=\"light\"\r\n                >\r\n                  Go Back To Movie\r\n                </Button>\r\n              </Jumbotron>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Main from \"../Main/main\";\r\nimport { fetchQuery } from \"../API\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { MovieContext } from \"../../StateProvider\";\r\n\r\nexport default function SearchResult() {\r\n  const [, dispatch] = useContext(MovieContext);\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  const query = params.get(\"query\");\r\n\r\n  useEffect(() => {\r\n    fetchQuery(query).then(data => {\r\n      dispatch({ type: \"SET_MOVIES\", moviesList: data.results });\r\n    });\r\n  }, [query]);\r\n\r\n  return <Main />;\r\n}\r\n","import React from \"react\";\r\nimport MyNavbar from \"./components/Navbar/navbar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Main from \"./components/Main/main\";\r\nimport MoviePage from \"./components/MoviePage/MoviePage\";\r\nimport ActorPage from \"./components/ActorPage/ActorPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SearchResult from \"./components/Navbar/searchResult\";\r\nimport { MovieProvider } from \"./StateProvider\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <MovieProvider>\r\n      <MyNavbar />\r\n      <Switch>\r\n        <Route path=\"/iraq-bc-movies-project-students/\" exact component={Main} />\r\n        <Route path={`/iraq-bc-movies-project-students/movie/:movieId`} component={MoviePage} />\r\n        <Route path={`/iraq-bc-movies-project-students/people/:castId`} component={ActorPage} />\r\n        <Route exact path=\"/iraq-bc-movies-project-students/search\" component={SearchResult} />\r\n      </Switch>\r\n    </MovieProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}